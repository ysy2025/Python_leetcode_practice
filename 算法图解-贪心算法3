leetcode No.455
贪心算法
假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，
每个孩子最多只能给一块饼干。对每个孩子 i ，都有一个胃口值 gi ，
这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 j ，
都有一个尺寸 sj 。如果 sj >= gi ，我们可以将这个饼干 j
分配给孩子 i ，这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，
并输出这个最大数值。
注意：
你可以假设胃口值为正。一个小朋友最多只能拥有一块饼干。
示例 1:
输入: [1,2,3], [1,1]
输出: 1
解释: 你有三个孩子和两块小饼干，3个孩子的胃口值分别是：1,2,3。
虽然你有两块小饼干，由于他们的尺寸都是1，你只能让胃口值是1的孩子满足。
所以你应该输出1。
class Solution:
    def findContentChildren(self, g: List[int], s: List[int]) -> int:
        if len(s)==0:
            return 0
        have = sorted(s)[::-1]
        need = sorted(g)[::-1]
        if max(have)<min(need):
            return 0
        count = 0
        i =0
        while i < len(have):
            pie = have[i]
            j = 0
            full = []
            while pie and j<len(need):
                if pie < need[j]:
                    j += 1
                else:
                    need.remove(need[j])
                    count += 1
                    break
            i += 1
        return count
超过时间限制。ummm。
我想的复杂了，饼干是不能拆开的。
class Solution:
    def findContentChildren(self, g: List[int], s: List[int]) -> int:
        if len(s)==0:
            return 0
        s.sort()
        g.sort()
        count = 0
        i =0
        while i < len(s):
            j = 0
            while j<len(g):
                if s[i] < g[j]:
                    j += 1
                else:
                    g.remove(g[j])
                    count += 1
                    break
            i += 1
        return count
尽力精简，勉强通过。。。
